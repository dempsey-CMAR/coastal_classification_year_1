---
title: "gdistance: cost functions"
format:
  html:
    toc: true
    toc-depth: 3
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, dpi = 600, fig.width = 8)
```

`r Sys.Date()`

Understand `shortestPath()`, `gdistance::accCost()`, `gdistance::costDistance`.

```{r, include=FALSE}
library(gdistance)
```

# Example 1

```{r}
r <- raster(
  nrows = 5, ncols = 5,
  xmn = 0, xmx = 5,
  ymn = 0, ymx = 5,
  crs = "+proj=utm +zone=20 +ellps=GRS80 +units=m +no_defs"
)

r[] <- c(rep(1, 5), 
         rep(1, 5), 
         1, 1, 100, 1, 1, 
         rep(1, 5), 
         rep(1, 5))

plot(r)
text(r)
```

## Transition Matrix
```{r}
# 1/mean: reciprocal to get permeability
tr <- transition(r, function(x) 1/mean(x), 8)

A <- cbind(0, 0)
B <- cbind(4.5, 4.5)

plot(raster(tr))
text(raster(tr), digits = 2)
points(A, pch = 19, col = 2)
points(B, pch = 19, col = 5)
```

## Accumlated Cost
```{r}
cost <- accCost(tr, A)

plot(cost)
text(cost, digits = 4)
```

## Cost Distance

Cost units between cells are defined as the reciprocal of the values in the transition matrix.

The function uses Dijkstra's algorithm, as implemented in the igraph package.

```{r}
costDistance(tr, rbind(A, B))
```

## Shortest Path
```{r}
AtoB <- shortestPath(tr, A, B, output = "SpatialLines")

plot(raster(tr))
text(raster(tr), digits = 3)
plot(AtoB, add = TRUE)
```

# Example 2

```{r}
r <- raster(
  nrows = 5, ncols = 5,
  xmn = 0, xmx = 5,
  ymn = 0, ymx = 5,
  crs = "+proj=utm +zone=20 +ellps=GRS80 +units=m +no_defs"
)

r[] <- c(rep(2, 5), 
         rep(2, 5), 
         2, 2, 100, 2, 2, 
         rep(2, 5), 
         rep(2, 5))

plot(r)
text(r)
```

## Transition Matrix
```{r}
# 1/mean: reciprocal to get permeability
tr <- transition(r, function(x) 1/mean(x), 8)

A <- cbind(0, 0)
B <- cbind(4.5, 4.5)

plot(raster(tr))
text(raster(tr), digits = 2)
points(A, pch = 19, col = 2)
points(B, pch = 19, col = 5)
```

## Accumulated Cost
```{r}
cost <- accCost(tr, A)

plot(cost)
text(cost, digits = 4)
```

## Cost Distance
```{r}
costDistance(tr, rbind(A, B))
```

## Shortest Path
```{r}
AtoB <- shortestPath(tr, A, B, output = "SpatialLines")

plot(raster(tr))
text(raster(tr), digits = 2)
plot(AtoB, add = TRUE)
```

# Example 3

```{r}
r <- raster(
  nrows = 5, ncols = 5,
  xmn = 0, xmx = 5,
  ymn = 0, ymx = 5,
  crs = "+proj=utm +zone=20 +ellps=GRS80 +units=m +no_defs"
)

r[] <- c(rep(1, 5), 
         rep(1, 5), 
         1, 1, 100, 100, 1, 
         rep(1, 5), 
         rep(1, 5))

plot(r)
text(r)
```

## Transition Matrix
```{r}
# 1/mean: reciprocal to get permeability
tr <- transition(r, function(x) 1/mean(x), 8)

A <- cbind(0, 0)
B <- cbind(4.5, 4.5)

plot(raster(tr))
text(raster(tr), digits = 2)
points(A, pch = 19, col = 2)
points(B, pch = 19, col = 5)
```

## Accumulated Cost
```{r}
cost <- accCost(tr, A)

plot(cost)
text(cost, digits = 4)
```

## Cost Distance
```{r}
costDistance(tr, rbind(A, B))
```

## Shortest Path
```{r}
AtoB <- shortestPath(tr, A, B, output = "SpatialLines")

plot(raster(tr))
text(raster(tr), digits = 2)
plot(AtoB, add = TRUE)
```

# Example 4
```{r}
r <- raster(
  nrows = 5, ncols = 5,
  xmn = 0, xmx = 5,
  ymn = 0, ymx = 5,
  crs = "+proj=utm +zone=20 +ellps=GRS80 +units=m +no_defs"
)

r[] <- c(rep(1, 5), 
         rep(1, 5), 
         rep(1, 5), 
         rep(1, 5),
         1, 1, 1, 1, 100)

plot(r)
text(r)
```

## Transition Matrix
```{r}
# 1/mean: reciprocal to get permeability
tr <- transition(r, function(x) 1/mean(x), 8)

A <- cbind(0, 0)
B <- cbind(4.5, 4.5)

plot(raster(tr))
text(raster(tr), digits = 2)
points(A, pch = 19, col = 2)
points(B, pch = 19, col = 5)
```

## Accumulated Cost
```{r}
cost <- accCost(tr, A)

plot(cost)
text(cost, digits = 4)
```

## Cost Distance
```{r}
costDistance(tr, rbind(A, B))
```

## Shortest Path
```{r}
AtoB <- shortestPath(tr, A, B, output = "SpatialLines")

plot(raster(tr))
text(raster(tr), digits = 2)
plot(AtoB, add = TRUE)
```

# Example 5: Nova Scotia
```{r}
r <- raster(
  nrows = 5, ncols = 5,
  xmn = 0, xmx = 5,
  ymn = 0, ymx = 5,
  crs = "+proj=utm +zone=20 +ellps=GRS80 +units=m +no_defs"
)

r[] <- c(rep(1, 5), 
         rep(1, 3), 100, 1 ,
         rep(1, 2), 100, 1, 1, 
         1, 100, rep(1, 3),
         rep(1, 5))

plot(r)
text(r)
```

## Transition Matrix
```{r}
# 1/mean: reciprocal to get permeability
tr <- transition(r, function(x) 1/mean(x), 8)

A <- cbind(0, 0)
B <- cbind(4.5, 4.5)

plot(raster(tr))
text(raster(tr), digits = 2)
points(A, pch = 19, col = 2)
points(B, pch = 19, col = 5)
```

## Accumulated Cost
```{r}
cost <- accCost(tr, A)

plot(cost)
text(cost, digits = 4)
```

## Cost Distance
```{r}
costDistance(tr, rbind(A, B))
```

## Shortest Path
```{r}
AtoB <- shortestPath(tr, A, B, output = "SpatialLines")

plot(raster(tr))
text(raster(tr), digits = 2)
plot(AtoB, add = TRUE)
```
